[
  {
    "path": "posts/2021-03-10-palmetto-and-binomial-regression/",
    "title": "Binary Logistic Regression",
    "description": "Using binary regression to test the feasibility of using plant characteristics to classify palmetto species.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\n\nShow code\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, messages = FALSE)\n\n# Attach packages and read in data\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\nlibrary(broom)\nlibrary(GGally)\nlibrary(jtools)\nlibrary(dplyr)\nlibrary(kableExtra)\n\n\n# Read in data and tidy; rename plant species, select variables.\n\npalmetto <- read_csv(\"palmetto.csv\") %>% \n  select(year, plant, species, height, length, width, green_lvs) %>% \n mutate(species = case_when(species %in% c(\"1\") ~ \"Serenoa repens\",\n                            species %in% c(\"2\") ~ \"Sabal etonia\"))\n\npalmetto$species <- as.factor(palmetto$species)\n\n\n\nIntroduction\nThe palmetto data set contains growth and survival data for two dominant palmetto species, Serenoa repens and Sabal etonia, across multiple habitats, years, and experimental treatments. Data was recorded at the Archbold Biological Station located in Florida. This project highlights differences in height, canopy length, canopy width, and green leaves for the two species. A binary logistic regression model is used to see the odds of predicting correctly or incorrectly if a plant species is either the Sabal etonia or Serenoa repens based on plant height, canopy length, canopy width, and green leaves count.\n\nData exploration\n\nShow code\n# Finalize Graphs\n\nggplot(data = palmetto, aes(x = height, y = green_lvs))+\n  geom_jitter(aes(color=species))+\n  facet_wrap(~species)+\n  labs( x = \"Height(cm)\", y = \"Green leaves count\", \n        title = \"Green leaves count and height comparison between Sabal etonia and Serenoa repens\",\n        subtitle = (\"1981 - 2017\"),\n        fill = \"Species\",\n        caption = \"Figure 1. Height(cm) and canopy width (cm) for Sabal Etonia and Serenoa repens\")+\n  theme_bw()+\n  scale_color_manual(values = c(\"green\", \"dark green\"))\n\n\n\n\n\nSerenoa repens has a higher green leaf count than Sabal etonia\nSerenoa repens has more individuals that are greater in height than Sabal etonia\n\n\nShow code\n# Second Graph Height and Width \n\nggplot(data = palmetto, aes(x = length, y = width))+\n  geom_jitter(aes(color=species))+\n  facet_wrap(~species)+\n    labs( x = \"Length (cm)\", y = \"Width (cm)\", \n        title = \"Width and length comparison between Sabal etonia and Serenoa repens\",\n        subtitle = (\"1981 - 2017\"),\n        fill = \"Species\",\n        caption = \"Figure 2. Length (cm) and canopy width (cm) for Sabal etonia and Serenoa repens\")+\n  theme_bw()+\n    scale_color_manual(values = c(\"green\", \"dark green\"))\n\n\n\n\n\nBoth Sabal etonia and Serenoa repens have a positive correlation with length and width. As the length of plants grow so do the width of both plants\n\nBinary Logistic Regression\nThe next step in the analysis is to utilize a binary logistic regression model. The binary logistic regression model will be used to see the probability of predicting correctly if a plant species is either the Sabal etonia or Serenoa repens based on plant height, canopy length, canopy width, and green leaves count.\n\nShow code\npalmetto_blr <- glm(species ~ length + \n                              width + green_lvs + height, \n                            data = palmetto,\n                            family = \"binomial\")\n\n\n#checking levels(palmetto$species):\n#0 is Serenoa\n#1 is Sabel\n# interpret as the probability of serenoa repens\n\n#when the model is above 50% probability it is serenoa classification\n#when the model is below 50% it is likely sabal. \n\n\n\n\nTable 1: Binomial Logistic Regression Outcomes for Serenoa repens and Sabal etonia\n\nShow code\n# Table \n\npalmetto <- palmetto_blr %>% \n  broom::tidy() %>% \n  select(estimate, std.error, p.value) %>% \n  mutate_if(is.numeric,funs(as.character(signif(.,3))))\n\nrownames(palmetto) <- c(\"Intercept\",\n                        \"Length (cm)\",\n                        \"Width (cm)\",\n                        \"Green Leaves (n)\",\n                        \"Height (cm)\")\n\nkableExtra::kable(palmetto,\n                  col.names= c(\"Coefficient\",\n                            \"Standard Error\",\n                            \"p-value\")) %>% \n  kableExtra::kable_styling(bootstrap_options = \"striped\",\n                            full_width = F,\n                            position =\"center\") %>% \n  kableExtra::add_header_above(bold = TRUE,\n                               line = TRUE,\n                               c(\"Binomial Logistic Regression for _Serenoa repens_, and _Sabal etonia_\" = 4))\n\n\n\n\nBinomial Logistic Regression for Serenoa repens, and Sabal etonia\n\n\n\n\n\nCoefficient\n\n\nStandard Error\n\n\np-value\n\n\nIntercept\n\n\n-3.23\n\n\n0.142\n\n\n3.42e-114\n\n\nLength (cm)\n\n\n-0.0458\n\n\n0.00187\n\n\n3.73e-133\n\n\nWidth (cm)\n\n\n-0.0394\n\n\n0.0021\n\n\n1.05e-78\n\n\nGreen Leaves (n)\n\n\n1.91\n\n\n0.0389\n\n\n0\n\n\nHeight (cm)\n\n\n0.0292\n\n\n0.00231\n\n\n8.69e-37\n\n\nSummary\nAs the canopy length of the plant increases, the odds of the plant being Serenoa repens decreases.\nAs the width of the plant increases, the odds of the plant being Serenoa repens decreases.\nAs the green leave count increases the odds of the plant being a Serenoa repens increases.\nAs the height of the plant increases, the odds of the plant being a Serenoa repens increases.\n\nTable 2. Incidents of correct and incorrect predictions of palmetto species based on the binary logistic model of predictor variables\n\nShow code\n#model fitting \n\nblr_fitted <- palmetto_blr %>% \n  broom::augment(type.predict = \"response\") %>% \n  mutate(predicted = ifelse(.fitted >= .5, \"Serenoa repens\", \"Sabal etonia\")) %>% \n  mutate(correct = ifelse(predicted == species, \"predicted_correctly\", \"predicted_incorrectly\"))\n  \npalmetto_table <- blr_fitted %>% \n  count(species, correct) %>% \npivot_wider(names_from = correct, values_from = n) %>% \nmutate(total = rowSums(across(where(is.numeric)))) %>%\nmutate(percent = (predicted_correctly / total)* 100) %>%\n mutate_if(is.numeric,funs(as.character(signif(.,3))))\n\n\nkableExtra::kable(palmetto_table,\n                  col.names= c(\"Species\", \"Correct Prediction\",\n                               \"Incorrect Prediction\", \"Total\", \"% Correct\")) %>% \n    kableExtra::kable_styling(bootstrap_options = \"striped\",\n                            full_width = F,\n                            position =\"center\") %>% \n  kableExtra::add_header_above(bold = TRUE,\n                               line = TRUE,\n                               c(\"Percent species predicted correctly by binary logistic regression model\" = 5))\n\n\n\n\nPercent species predicted correctly by binary logistic regression model\n\n\n\nSpecies\n\n\nCorrect Prediction\n\n\nIncorrect Prediction\n\n\nTotal\n\n\n% Correct\n\n\nSabal etonia\n\n\n5700\n\n\n454\n\n\n6160\n\n\n92.6\n\n\nSerenoa repens\n\n\n5550\n\n\n564\n\n\n6110\n\n\n90.8\n\n\nSummary\nBased on the binary logistic regression model, the odds of predicting the Sabal etonia based on the plant characteristics of height, canopy length, canopy width, and green leaves count is 92.6%, and the odds of predicting the Serenoa repens is 90.8%.\nData Source\nAbrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\n\n\n\n",
    "preview": "posts/2021-03-10-palmetto-and-binomial-regression/distill-preview.png",
    "last_modified": "2021-03-10T10:25:52-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-10-parameter-estimation-wild-fish-catch/",
    "title": "Parameter Estimation - Wild Fish Catch",
    "description": "This project looks at global wild fish catch from 1950 - 2012 and uses nonlinear least squares to estimate the increase in global wild fish catch.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\n\nShow code\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(boot)\nlibrary(gt)\nlibrary(patchwork)\nlibrary(broom)\nlibrary(nlstools)\nlibrary(janitor)\n\n\n\nIntroduction\nThis project uses nonlinear least squares to estimate the increase in global wild fish catch. The data set contains world wild fish catch between 1950 - 2012. The data includes fishes, crustaceans, mollusks, and other aquatic animals. It does not include crocodiles, alligators, and aquatic mammals. The figures for 2011 are estimates and the figures for 2012 are projections. The data was compiled by the Earth Policy Institute.\n\nShow code\n# read in data and tidy\n\nfish_catch <- read_csv(\"fish_catch.csv\")  %>%  \n  clean_names() %>% \n  drop_na() %>% # drops na (entire row)\n  rename(\"year\" = \"world_wild_fish_catch_and_farmed_fish_production_1950_2012\") %>% \n  rename(\"wild_catch\" = \"x2\", \"farmed_fish\" = \"x3\", \"total_fish_production\" = \"x4\")\n\nfish_catch_tidy <- fish_catch[-1,] %>%     # removes first row\n  mutate_if(is.character, as.numeric) %>%  # changes the character classes to numeric \n  mutate(year_start = year - min(year)) # create a new column to make year 1950 start with 0...\n\n#summary(fish_catch_tidy)\n\n\n\nExplore wild catch over time\n\nShow code\nggplot(fish_catch_tidy, aes(x = year_start, y = wild_catch))+\n  geom_point()+\n  theme_bw()+\n  labs(x = \"Time (years)\", y = \"Population (individuals)\", title = \"Wild catch over time\")\n\n\n\n\nFigure 1: Wild catch over time for wild catch population. The x axis indicates time in number of years and the y axis indicates population in years.\n\nShow code\n# log transformation:\nggplot(data = fish_catch_tidy, aes(x = year_start, y = log(wild_catch))) +\n  geom_point() +\n  theme_bw() +\n  labs(x = \"Time (year)\", y = \"ln(population)\", title = \"Wild catch over time\")\n\n\n\n\n\nFigure 2: Wild catch over time in log units for wild catch population. The x axis indicates time in number of years and the y axis indicates population in log units.\nWild catch over the 62 years expresses a logistic growth trend. This indicates that the wild catch population’s per capita growth rate decreases as the population size approaches a carrying capacity (K). The carrying capacity represents an approach to limited resources.\nLogistic growth equation:\n\\(P(t)=\\frac{K}{1+Ae^{-kt}}\\), where\n\\(K\\) is the carrying capacity\n\\(A\\) is \\(\\frac{K-P_0}{P_0}\\)\n\\(k\\) is the growth rate constant\nFind initial estimates for K, A and k:\n\nShow code\n# Get only up to 40 years & log transform the population\n# To estimate the growth rate constant (k) *during exponential growth phase)\nwild_catch_exp <- fish_catch_tidy %>% \n  filter(year_start < 41) %>% \n  mutate(ln_pop = log(wild_catch))\n  \n# Model linear to get *k* estimate (the slope of this linear equation is an estimate of the growth rate constant):\nlm_k <- lm(ln_pop ~ year_start, data = wild_catch_exp)\n#lm_k\n\n# Estimates: \n# Coefficient (k) ~ 0.03537\n#K = 90\n#A <- (90-17)/17\n#A\n#A = 4.29\n\ndf_nls <- nls(wild_catch ~ K/(1 + A*exp(-r*year_start)),\n              data = fish_catch_tidy,\n              start = list(K = 90, A = 4.29, r = 0.035),\n              trace = TRUE\n              )\n\n\n\nInitial estimates: k = .035, K = 90, A = 4.29\n\nShow code\n# Use broom:: functions to get model outputs in tidier format: \nmodel_out <- broom::tidy(df_nls) %>% \n  mutate_if(is.numeric, funs(as.character(signif(., 3))))\n\n# Want to just get one of these?  \n#A_est <- model_out$estimate[2] # Gets the first rown in the estimate column.\n\n\n\nTable 1: Estimated parameter outcomes for increase in world wild catch between 1950 - 2012. Data Source: Earth Policy Institute\n\nShow code\n# Create a table using gt()\n\nmodel_out %>% \n  gt() %>% \n    tab_header(\n    title = \"Parameter outcomes for wild catch\",\n    subtitle = \"From nonlinear least squares\") %>% \n    cols_label(\n    term = \"Term\",\n    estimate = \"Value Estimate\",\n    std.error = \"Standard Error\",\n    statistic = \"Statistic\",\n    p.value = \"P Value\") %>% \n    tab_footnote( \n    footnote = \"Data from 1950 - 2012\",\n    location = cells_title())\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#nxcngzfnsv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#nxcngzfnsv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#nxcngzfnsv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nxcngzfnsv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nxcngzfnsv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nxcngzfnsv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nxcngzfnsv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nxcngzfnsv .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nxcngzfnsv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nxcngzfnsv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nxcngzfnsv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nxcngzfnsv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nxcngzfnsv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#nxcngzfnsv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nxcngzfnsv .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nxcngzfnsv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#nxcngzfnsv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#nxcngzfnsv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nxcngzfnsv .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#nxcngzfnsv .gt_left {\n  text-align: left;\n}\n\n#nxcngzfnsv .gt_center {\n  text-align: center;\n}\n\n#nxcngzfnsv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nxcngzfnsv .gt_font_normal {\n  font-weight: normal;\n}\n\n#nxcngzfnsv .gt_font_bold {\n  font-weight: bold;\n}\n\n#nxcngzfnsv .gt_font_italic {\n  font-style: italic;\n}\n\n#nxcngzfnsv .gt_super {\n  font-size: 65%;\n}\n\n#nxcngzfnsv .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nParameter outcomes for wild catch1\n    From nonlinear least squares\n    Term\n      Value Estimate\n      Standard Error\n      Statistic\n      P Value\n    K\n100\n2.73\n36.7\n8.57e-43A\n4.32\n0.293\n14.7\n1.34e-21r\n0.0699\n0.00465\n15\n5.14e-22\n        \n          1\n          \n           \n          Data from 1950 - 2012\n          \n      \n    \n\nThe model with estimated parameters is: \\[P(t) = \\frac{100.3}{1+4.32e^{-0.07t}}\\]\nVisualize model over original observed values\n\nShow code\n# Make predictions for the population at all of those times (time) in the original df: \np_predict <- predict(df_nls)\n\n# Bind predictions to original data frame:\ndf_complete <- data.frame(fish_catch_tidy, p_predict)\n\n# Plot them all together:\nggplot(data = df_complete, aes(x = year_start, y = wild_catch)) +\n  geom_point() +\n  geom_line(aes(x = year_start, y = p_predict)) +\n  theme_bw()+\n  labs(x = \"Time (years)\", y = \"Population (individuals)\", \n       title = \"Increase in wild catch\")\n\n\n\n\n\nFigure 3: Increase in wild catch over time. The x-axis indicates time in years and the y-axis indicates the wild catch population in number of individuals. The dotted line represents results from the original data, while the solid line indicates the results from the predicted model output.\nData Source\nGlobal wild fish catch and aquaculture production, compiled by Earth Policy Institute with 1950-2010 from U.N. Food and Agriculture Organization (FAO), Global Capture Production and Global Aquaculture Production, electronic databases, at www.fao.org/fishery/topic/16140/en.\n\n\n\n",
    "preview": "posts/2021-03-10-parameter-estimation-wild-fish-catch/distill-preview.png",
    "last_modified": "2021-03-10T09:26:48-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-10-santa-barbara-wind-turbine-gis-report/",
    "title": "Priority Locations for Santa Barbara Wind Turbines",
    "description": "A spatial analysis identifying priority locations in Santa Barbara County for Wind Turbines.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\nSummary\nI conducted a spatial analysis in ArcGIS to find the top 10 most suitable areas in the county of Santa Barbara for wind turbines. The suitability of sites was based on various factors:\nSites must be in areas with sufficient wind energy\nSites must be within 7.5 km of a major road\nSites must not be within 1 mile of an existing urban area\nSites cannot be within 7.5 km of a major airport\nSites cannot be within a fire hazard zone\nSites cannot be on public lands\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-10T10:53:51-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-10-timeseries/",
    "title": "Timeseries",
    "description": "Willamette Falls fish passage time series summary.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\nOverview\nSummary:\nAs part of a class project, I worked with Grace Brofman and Mukta Kelkar to create a time series of salmon at Willamette Falls.\nThe Columbia River Data Access in Real Time (DART) program is part of the University of Washington’s Columbia Basin Research program. DART provides access to various environmental, riparian, and oceanic data, including salmonid-specific observations. This report utilizes DART data to explore adult fish passage from 2001 - 2010 at the Willamette Falls fish ladder on the Willamette River (Image 1). Included in the report are visualizations of various time series, seasonal patterns of fish observations, and annual fish species counts. \nImage 1: Willamette Falls Fish Ladder, circa 1913 Source: Old Oregon Photos\n\n\nImage 2: Map of the Willamette Falls fish ladder. Source: US Army Corp of Engineers\n\n\nShow code\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n# Attach packages and read in and tidy data \n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\nlibrary(lubridate)\nlibrary(tsibble)\nlibrary(feasts)\nlibrary(viridis)\n\n\nwillamette_fish_passage <- read_csv(\"willamette_fish_passage.csv\") %>% \n  clean_names() %>% \n  select(coho, jack_coho, steelhead, date) %>% \n  mutate(date = lubridate::mdy(date))\n\n# converting to long format to put all fish species in one column\nwillamette_long <- willamette_fish_passage %>% \n  pivot_longer(1:3,\n               names_to = \"fish_species\",\n               names_prefix = NULL,\n               values_drop_na = FALSE) # decided not to drop observations with n/a values becuase in Tab 1 it says to change na values to zero\n  # replace na values with zero\nwillamette_long[is.na(willamette_long)] = 0 \n\n\n\nTab 1: Original time series\n\nShow code\n# Time series- tsibble\n\nwillamette_ts <- willamette_long %>% \n   as_tsibble(key = fish_species, index = date) # not sure if key should be fish species or something else? \n\nggplot (data = willamette_ts, aes(x = date, y = value))+\n  geom_line()+\n  labs(x = \"Date\", y = \"Fish Count\", title = \"Fish counts at Willamette Falls (2001 - 2010)\", subtitle = \"Adult passage (fish/day)\",\n       caption = \"Figure 1: Time series of Coho, Jack coho, and steelhead salmon passage from 2001 - 2010 (fish/ day)\")+\n  facet_wrap(~fish_species, nrow = 3, \n             labeller = labeller(fish_species =\n                                   c(\"coho\" = \"Coho\",\n                                   \"jack_coho\" = \"Jack Coho\",\n                                   \"steelhead\" = \"Steehead\")))+\n  theme_classic()\n\n\n\n\n\nThere is a linear and seasonal trend for Coho. Between 2002 and 2010 the adult passage in fish per day for Coho has increased.\nJack Coho experiences a seasonal trend, but adult passage for Jack Coho is less successful than for Coho or Steelhead.\nSteelhead experiences seasonal patterns\nTab 2: Seasonplots\n\nShow code\n#Wrangle data for use in seasonplot\nwillamette_ts_season <- willamette_long %>% \n   as_tsibble(key = fish_species, index = date)\n\n#Create color-blind friendly color palette (from r-cookbook)\ncbPalette <- c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\", \"#c71585\", \"#458b74\")\n\n#Create Seasonplot\nwillamette_ts_season %>% \n  gg_season(y = value) + \n  facet_wrap(~ fish_species,   #make a different plot for each fish species\n             scales = \"fixed\") +   #fix the y axis \n  labs(title = \"Seasonal Variation in Williamette Falls salmon passage\",\n       x = \"Month\",\n       y = \"Count\",\n       caption = \"Figure 2: Coho, Jack coho, and steelhead salmon passage from 2001 - 2010 \",\n       color = \"Year\") +  #label the legend\n  theme_classic() +\n  theme(legend.position = \"right\")\n\n\n\n\n\nCoho salmon’s highest seasonal peak was in 2010.\nCoho and jack-coho experience peaks in October, while Steelhead salmon experience peaks in June.\nSteelhead salmon have a longer passage period than coho and jack-coho\nTab 3: Annual counts by species\n\nShow code\n# summarize count by species and year\nfish_year <- willamette_long %>% \n  mutate(year = year(date))  %>% # pulling just the year from the date\n  replace_na() %>% \n  group_by(year, fish_species) %>% \n  summarize(annual_total = sum(value))\n  \n# graphing fish passage by species and year\nggplot(data = fish_year,\n       aes(x = year,\n           y = annual_total)) +\n  geom_line(aes(color = fish_species)) +\n  scale_x_continuous(expand = c(0,0),\n                     breaks = seq(2001,2010,1)) +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"Year\",\n       y = \"Annual observed\",\n       title = \"Annual fish passage totals by species (2001-2010)\",\n       caption = \"Figure 3: Annual fish passage totals for Coho, Jack Coho, and Steelhead  passage from 2001 - 2010 \",\n      fill = \"Fish species\") +\n  theme(plot.title = element_text(hjust = -1)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5 )) +\n  theme_classic() +\n  scale_color_discrete(name = \"Fish species\", \n                       breaks = c(\"coho\", \"jack_coho\", \"steelhead\"),\n                       labels = c(\"Coho\", \"Jack Coho\", \"Steelhead\")) \n\n\nShow code\n#scale_color_manual(values = cbPalette) \n\n# edited legend labels from http://www.cookbook-r.com/Graphs/Legends_(ggplot2)/\n\n\n\nSummary statistics and analysis: major trends\nSteelhead experienced a general decline in annual observed fish passage from 2001 -2009, with a sharp increase in passage in 2010. More data would be need to know if 2010 indicates a change in negative trend or if passage will generally continue to decline.\nCoho and Jack Coho fish passage observations were signifantly lower than Steelhead from 2001 - 2008. In 2009, Coho passage increased sixfold to surpass Steelhead observations for that year, while Jack Coho counts stayed constant.\nReferences\nU.S. Army Corps of Engineers, NWD, Chelan, Douglas, Grant County PUDs, Yakima Klickitat Fisheries Project, Colville Tribes Fish & Wildlife (OBMEP), Oregon Department of Fish & Wildlife, Washington Department of Fish & Wildlife., Colombia Basin Research Data Access in Real Time., Retrieved from: (http://www.cbr.washington.edu/dart/query/adult_proj_sum)\n\n\n\n",
    "preview": "posts/2021-03-10-timeseries/distill-preview.png",
    "last_modified": "2021-03-10T10:17:39-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-25-seal-level-rise/",
    "title": "Sea Level Rise in Santa Barbara County",
    "description": "A spatial analysis identifying areas at risk of flooding due to sea level rise in downtown Santa Barbara.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\nSummary\nI conducted a spatial analysis in ArcGIS to identify areas most at risk of flooding due to sea level rise in downtown Santa Barbara. I identified the areas projected to be flooded, parcels projected to be flooded, and estimated the cost of property loss based of data from the National Oceanic and Atmospheric Administration and the United States Geological Survey.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-06-24T13:55:55-07:00",
    "input_file": "sea-level-rise.utf8.md"
  },
  {
    "path": "posts/2021-03-09-text-and-sentiment-analysis-for-the-handmaids-tail/",
    "title": "Text and sentiment analysis",
    "description": "This post shows the results from a text analysis and sentiment analysis of The Handmaid's Tail by Margaret Atwood",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-03-09",
    "categories": [],
    "contents": "\n\nShow code\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(textdata)\nlibrary(pdftools)\nlibrary(ggwordcloud)\nlibrary(png) #import images\nlibrary(ggpubr) # add images to ggplot\nlibrary(patchwork)\n\n\n\nIntroduction\nThe Handmaid’s Tail, by Margaret Atwood, is a popular dystopian novel about a Christian fundamentalist theocratic regime that takes power over the United States in response to a fertility crisis. This project undergoes a text and sentiment analysis to understand the most commonly used words and emotional trends throughout the novel. The first section looks at the most common words by chapter, and the top 50 most common words used throughout the novel. The second part is a sentiment analysis looking at the emotional trend.\n\nShow code\n#Read in The Handmaid's Tail\n\nhandmaids_tail_text <- pdf_text(\"handmaidstale_margaret_atwood.pdf\")\n\n#handmaids_tail_p34 <- handmaids_tail_text[34]\n#handmaids_tail_p34\n\n#Get text into data frame and tidy format: \n#each line has its own row \n#get rid of extra white space\n\nhandmaids_tail_tidy <- data.frame(handmaids_tail_text) %>% # each line is a page\n  mutate(text_full = str_split(handmaids_tail_text, pattern = '\\\\n')) %>%  # string split recognizes where there is a line break and splits it up; each line from each page is an element of a vector\n  unnest(text_full) %>%  # gives each line its own row; each element in each vector has its own space\n  mutate(text_full = str_trim(text_full)) # cleans up white space \n\n\n\nPart 1: Text Analysis\n\nShow code\n# More tidying\n\nhandsmaid_df <- handmaids_tail_tidy %>% \n  slice(-(1:16)) %>%  # remove rows until chapter one begins \n  mutate(chapter = case_when(\n    str_detect(text_full, pattern = \"CHAPTER\") ~ text_full,\n    TRUE ~ NA_character_)) %>%   # use string detect to detect the word chapter\n  fill(chapter) %>% \n  separate(col = chapter, into = c(\"ch\", \"no\"), sep = \" \") %>% \n  mutate(chapter = as.numeric(no)) # makes chapter column numeric \n\n# Tidy to get a column that has lines separated by words \nhandmaids_tokens <- handsmaid_df %>% \n  unnest_tokens(word, text_full) %>%  # each word is its own line \n  select(-handmaids_tail_text) # get ris of this column\n\n# word count by chapter and remove stop words\nhandmaids_ch_wordcount <- handmaids_tokens %>% \n  anti_join(stop_words) %>%  # removes stop words \n  count(chapter, word)\n\n\n\n\nShow code\n# Word count by chapter for first half of book\ntop_5_words_23 <- handmaids_ch_wordcount %>% \n  filter(chapter %in% c(1:23)) %>% \n  group_by(chapter) %>% \n  arrange(-n) %>% \n  slice(1:5)\n\n# graph \nggplot(data = top_5_words_23, aes (y = fct_reorder(word, n), x = n))+\n  geom_col(fill = \"blue\")+\n  facet_wrap(~chapter, scales = \"free\")+\n  labs(title = \"Top 5 most common words by chapter\", x = \"Words\", y = \"Count of words\")\n\n\n\n\nFigure 1: The top 5 most common words by chapter of the first half of The Handmaid’s Tail by Margaret Atwood.\n\nShow code\n# Word county by chapter for second half of book\ntop_5_words_46 <- handmaids_ch_wordcount %>% \n  filter(chapter %in% c(24:46)) %>% \n  group_by(chapter) %>% \n  arrange(-n) %>% \n  slice(1:5)\n\n# graph \nggplot(data = top_5_words_46, aes (x = word, y = n))+\n  geom_col(fill = \"blue\")+\n  facet_wrap(~chapter, scales = \"free\")+\n  coord_flip()+\n  labs(title = \"Top 5 most common words by chapter\", x = \"Word\", y = \"Count of words\")\n\n\n\n\nFigure 2: The top 5 most common words by chapter of the second half of The Handmaid’s Tail by Margaret Atwood.\n\nShow code\n# import image for background of word cloud\nimg <- readPNG(\"handmaid1.png\")\n\n### make a word cloud of top 50 most used words in the novel\n\n#tidy for word count of entire novel\nhandmaids_nonstop <- handmaids_tokens %>% \n  anti_join(stop_words)\n\n# get top 50 and filter out character names \ntop_50 <- handmaids_nonstop  %>% \n  count(word) %>% \n   filter(!word %in% c(\"janine\", \"moira\", \"lydia\", \"elizabeth\", \"luke\", \"ofglen\", \"waterford\", \"rita\", \"serena\", \"cora\")) %>% \n  arrange(-n) %>% \n  slice(1:50)\n \n# create the word cloud\ncloud <- ggplot(data = top_50, aes(label = word))+\n  background_image(img)+\n  geom_text_wordcloud(aes(color = n, size = n), shape = \"triangle-forward\")+\n  scale_size_area(max_size = 10)+\n scale_color_gradientn(colors = c(\"gray68\", \"gray26\", \"gray8\"))+\n  theme_minimal()\n\n\ncloud\n\n\n\n\nFigure 3: Word count of the 50 most common words used in Margaret Atwood’s The Handmaid’s Tail. Character names are excluded from this list. The top 5 most common words are: Time, Aunt, Women, Feel, and White. Image source: Josh D. Jackson\nPart 2: Sentiment Analysis\n\nShow code\n#get_sentiments(lexicon = \"afinn\")\n\n# first bind words in from the handmaids tail nonstop to afinn\n\nhandmaid_afinn <- handmaids_nonstop %>% \n  inner_join(get_sentiments(\"afinn\"))\n\n# get counts by sentiment ranking\nafinn_counts <- handmaid_afinn %>% \n  count(chapter, value)\n\n# get mean afinn score by chapter:\nafinn_mean <- handmaid_afinn %>% \n  group_by(chapter) %>%\n  summarize(mean_afinn = mean(value))\n\n#Plot\ngraph_a <- ggplot(data = afinn_mean,\n       aes(x = fct_rev(as.factor(chapter)),\n           y= mean_afinn))+\n  geom_col(fill = \"midnightblue\")+\n  coord_flip()+\n  labs( x = \"Chapter\", y = \"Afinn value\", title = \"Sentiment values by chapter\")\n\n\n\n\nShow code\nhandmaids_nrc <- handmaids_nonstop %>% \n  inner_join(get_sentiments(\"nrc\"))\n\n# find the top nrc bins by sentiment \n\ntop_nrc <- handmaids_nrc %>% \n  count(sentiment) %>% \n  arrange(-n)\n  \ngraph_b <- ggplot(data = top_nrc, aes (y = n, x = fct_reorder(sentiment, n)))+\n  geom_col(fill = \"midnightblue\")+\n  coord_flip()+\n  labs(title = \"NRC sentiment values\", x = \"NRC Sentiment\", y = \"Count of NRC sentiment\")+\n  theme_classic()\n\n\n\n\nShow code\n#get plots together into one plot \n\ngraph_c <- (graph_a | graph_b) & theme_classic() &\n  plot_annotation(title = \"Sentiment Analysis of The Handmaid's Tail by Margaret Atwood\")\n\ngraph_c\n\n\n\n\nFigure 3: Displays the Sentiment analysis for The Handmaid’s Tail by Margaret Atwood. The left graph shows the mean Afinn sentiment value by chapter. The right graph shows the top NRC sentiment values throughout the entire novel. Although most of the chapters have a negative sentiment value, the most common NRC sentiment is associated with “positive”. Many negative NRC bins are displayed, such as negative, sadness, fear, anger, disgust, and surprise. It is no surprise that The Handmaid’s Tail, which is a dystopian novel, is largely associated with negative sentiments.\n\nSources\nAtwood, M. (1998). The handmaid’s tale (1st Anchor Books ed.). Anchor Books.\nCrowd sourcing a Word-Emotion Association Lexicon, Saif Mohammad and Peter Turney, Computational Intelligence, 29 (3), 436-465, 2013.\nJosh D. Jackson, Image retrieved from: https://www.pastemagazine.com/books/the-handmaid-s-tale/novels-read-after-handmaids-tale-margaret-atwood/\n\n\n\n",
    "preview": "posts/2021-03-09-text-and-sentiment-analysis-for-the-handmaids-tail/distill-preview.png",
    "last_modified": "2021-03-10T08:39:34-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-25-2008-oil-spill-occurrence-in-california/",
    "title": "Visualizing spatial data: tmap and chloropeths",
    "description": "This post describes oil spill occurrence throughout California in 2008. Data is from the CA DFW Oil Spill Incident Tracking database.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-02-25",
    "categories": [],
    "contents": "\n\nShow code\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)\n\n# load libraries \nlibrary(tidyverse)\nlibrary(here)\nlibrary(sf)\nlibrary(janitor)\nlibrary(tmap)\nlibrary(gstat)\nlibrary(stars)\nlibrary(lubridate)\nlibrary(ggsn)\nlibrary(ggspatial)\n\n# read in data and do some wrangling \n  \noil_spill <- read_sf(here(\"Oil_Spill_Incident_Tracking_%5Bds394%5D-shp\", \"Oil_Spill_Incident_Tracking_%5Bds394%5D.shp\")) %>% \n  clean_names() \n\n#summary(oil_spill)\n\n#oil_spill %>% st_crs() #check the CRS; WGS 84 3857\n\nca_counties <- read_sf(here(\"ca_counties\", \"CA_Counties_TIGER2016.shp\")) %>% \n  clean_names() %>% \n  rename(county_name = name, land_area = aland)\n\n#ca_counties %>% st_crs() # the same CRS as oil spill data  (WGS 84 3847)\n\n\n\nIntroduction\nThis project looks at oil spill occurrence and counts by county throughout California. The Office of Spill Prevention and Response (OSPR) Incident Tracking Database is responsible for tracking oil spills throughout the state. Oil spill presence data is collected by the OSPR Field and Response Team for oil spill in marine waters and the OSPR Inland Pollution Coordinators and Wardens for inland oil spills.\nLocation of oil spills in California\nFigure 1: Map of the locations of 2008 oil spills that occurred throughout California. Types include inland, marine, and fresh water spills. Most oil spills occured in marine and fresh water locations. Data Source: CA DFW Oil Spill Incident Tracking\nCount of inland oil spill events by California counties for 2008 oil spills\n\nShow code\n# wrangle data to get counts of inland oil spill events by county for 2008 oil spill \n\noil_spill_count <- oil_spill %>% \n  mutate(date = lubridate::ymd(dateofinci)) %>% \n  filter(inlandmari == \"Inland\") %>% \n  count(localecoun)\n\n#Join data frames together to plot\noil_spill_join <- ca_counties %>% \n  st_join(oil_spill_count)\n\n# plot oil spills within the county \nggplot(data = oil_spill_join) +\n  geom_sf(aes(fill = n), color = \"white\", size = 0.1) +\n  scale_fill_gradientn(colors = c(\"grey\",\"orange\",\"red\")) +\n  theme_void() +\n  labs(fill = \"Oil spill count by county\", title = \"Oil spill counts by county in California\")+\n  annotation_scale(location = \"bl\", width_hint = .5)+\n  annotation_north_arrow(location = \"bl\", which_north = \"true\", pad_x = unit(.75, \"in\"), pad_y = unit(.5, \"in\"), style = north_arrow_fancy_orienteering())\n\n\n\n\n\nFigure 2: Map of the occurrence of inland oil spills by California County. The highest occurrence of oil spills in 2008 occurred in Los Angeles County. There is no data for Modoc County, which is displayed in dark gray. Data Source: CA DFW Oil Spill Incident Tracking\nConclusion\nOil spills that occurred throughout California in 2008 occurred mostly in marine and freshwater locations\nIn 2008 the top 5 California Counties that experienced the most inland oil spills were: Los Angeles, San Mateo, Alameda, San Diego, and Orange Counties.\nData Source:\nCA DFW Oil Spill Incident Tracking\n\n\n\n",
    "preview": "posts/2021-02-25-2008-oil-spill-occurrence-in-california/distill-preview.png",
    "last_modified": "2021-03-14T17:14:53-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-07-welcome/",
    "title": "welcome",
    "description": "Welcome to my blog where I will share various data analysis projects.",
    "author": [
      {
        "name": "Nicole Schmidt",
        "url": {}
      }
    ],
    "date": "2021-02-07",
    "categories": [],
    "contents": "\n.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-10T09:00:58-08:00",
    "input_file": {}
  }
]
